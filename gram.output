Terminals unused in grammar

   ERROR


State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID PV

    7 @1: %empty

    8 var_declaration: type_specifier ID @1 ACOL NUM FCOL PV

    9 type_specifier: INT
   10               | VOID
   11               | FLOAT

   12 @2: %empty

   13 fun_declaration: type_specifier ID @2 AP params FP compound_stmt

   14 params: param_list
   15       | VOID

   16 param_list: param_list VIRG param
   17           | param

   18 param: type_specifier ID

   19 @3: %empty

   20 param: type_specifier ID @3 ACOL FCOL

   21 compound_stmt: ACH local_declarations stmt_list FCH

   22 local_declarations: local_declarations var_declaration
   23                   | %empty

   24 stmt_list: stmt_list stmt
   25          | %empty

   26 stmt: expr_stmt
   27     | compound_stmt
   28     | selection_stmt
   29     | iteration_stmt
   30     | return_stmt

   31 expr_stmt: expr PV
   32          | PV

   33 selection_stmt: IF AP expr FP stmt
   34               | IF AP expr FP stmt ELSE stmt

   35 iteration_stmt: WHILE AP expr FP stmt

   36 return_stmt: RETURN PV
   37            | RETURN expr PV

   38 expr: var ATRIB expr
   39     | simple_expr

   40 var: ID

   41 @4: %empty

   42 var: ID @4 ACOL expr FCOL

   43 simple_expr: additive_expr relop additive_expr
   44            | additive_expr
   45            | additive_expr error

   46 relop: MENORIG
   47      | MENOR
   48      | MAIOR
   49      | MAIORIG
   50      | IG
   51      | DIF

   52 additive_expr: additive_expr addop term
   53              | term
   54              | error

   55 addop: SOMA
   56      | SUB

   57 term: term mulop factor
   58     | factor

   59 mulop: MUL
   60      | DIV

   61 factor: AP expr FP
   62       | var
   63       | call
   64       | NUM
   65       | NUM_FLOAT

   66 @5: %empty

   67 call: ID @5 AP args FP

   68 args: arg_list
   69     | %empty

   70 arg_list: arg_list VIRG expr
   71         | expr


Terminals, with rules where they appear

$end (0) 0
error (256) 45 54
ELSE (258) 34
IF (259) 33 34
INT (260) 9
FLOAT (261) 11
RETURN (262) 36 37
VOID (263) 10 15
WHILE (264) 35
ID (265) 6 8 13 18 20 40 42 67
NUM (266) 8 64
NUM_FLOAT (267) 65
SOMA (268) 55
SUB (269) 56
MUL (270) 59
DIV (271) 60
MENOR (272) 47
MENORIG (273) 46
MAIOR (274) 48
MAIORIG (275) 49
IG (276) 50
DIF (277) 51
ATRIB (278) 38
PV (279) 6 8 31 32 36 37
VIRG (280) 16 70
AP (281) 13 33 34 35 61 67
FP (282) 13 33 34 35 61 67
ACOL (283) 8 20 42
FCOL (284) 8 20 42
ACH (285) 21
FCH (286) 21
ERROR (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
declaration_list (35)
    on left: 2 3, on right: 1 2
declaration (36)
    on left: 4 5, on right: 2 3
var_declaration (37)
    on left: 6 8, on right: 4 22
@1 (38)
    on left: 7, on right: 8
type_specifier (39)
    on left: 9 10 11, on right: 6 8 13 18 20
fun_declaration (40)
    on left: 13, on right: 5
@2 (41)
    on left: 12, on right: 13
params (42)
    on left: 14 15, on right: 13
param_list (43)
    on left: 16 17, on right: 14 16
param (44)
    on left: 18 20, on right: 16 17
@3 (45)
    on left: 19, on right: 20
compound_stmt (46)
    on left: 21, on right: 13 27
local_declarations (47)
    on left: 22 23, on right: 21 22
stmt_list (48)
    on left: 24 25, on right: 21 24
stmt (49)
    on left: 26 27 28 29 30, on right: 24 33 34 35
expr_stmt (50)
    on left: 31 32, on right: 26
selection_stmt (51)
    on left: 33 34, on right: 28
iteration_stmt (52)
    on left: 35, on right: 29
return_stmt (53)
    on left: 36 37, on right: 30
expr (54)
    on left: 38 39, on right: 31 33 34 35 37 38 42 61 70 71
var (55)
    on left: 40 42, on right: 38 62
@4 (56)
    on left: 41, on right: 42
simple_expr (57)
    on left: 43 44 45, on right: 39
relop (58)
    on left: 46 47 48 49 50 51, on right: 43
additive_expr (59)
    on left: 52 53 54, on right: 43 44 45 52
addop (60)
    on left: 55 56, on right: 52
term (61)
    on left: 57 58, on right: 52 53 57
mulop (62)
    on left: 59 60, on right: 57
factor (63)
    on left: 61 62 63 64 65, on right: 57 58
call (64)
    on left: 67, on right: 63
@5 (65)
    on left: 66, on right: 67
args (66)
    on left: 68 69, on right: 67
arg_list (67)
    on left: 70 71, on right: 68 70


State 0

    0 $accept: . program $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    program           go to state 4
    declaration_list  go to state 5
    declaration       go to state 6
    var_declaration   go to state 7
    type_specifier    go to state 8
    fun_declaration   go to state 9


State 1

    9 type_specifier: INT .

    $default  reduce using rule 9 (type_specifier)


State 2

   11 type_specifier: FLOAT .

    $default  reduce using rule 11 (type_specifier)


State 3

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 10


State 5

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (program)

    declaration      go to state 11
    var_declaration  go to state 7
    type_specifier   go to state 8
    fun_declaration  go to state 9


State 6

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 7

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 8

    6 var_declaration: type_specifier . ID PV
    8                | type_specifier . ID @1 ACOL NUM FCOL PV
   13 fun_declaration: type_specifier . ID @2 AP params FP compound_stmt

    ID  shift, and go to state 12


State 9

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 12

    6 var_declaration: type_specifier ID . PV
    8                | type_specifier ID . @1 ACOL NUM FCOL PV
   13 fun_declaration: type_specifier ID . @2 AP params FP compound_stmt

    PV  shift, and go to state 13

    AP        reduce using rule 12 (@2)
    $default  reduce using rule 7 (@1)

    @1  go to state 14
    @2  go to state 15


State 13

    6 var_declaration: type_specifier ID PV .

    $default  reduce using rule 6 (var_declaration)


State 14

    8 var_declaration: type_specifier ID @1 . ACOL NUM FCOL PV

    ACOL  shift, and go to state 16


State 15

   13 fun_declaration: type_specifier ID @2 . AP params FP compound_stmt

    AP  shift, and go to state 17


State 16

    8 var_declaration: type_specifier ID @1 ACOL . NUM FCOL PV

    NUM  shift, and go to state 18


State 17

   13 fun_declaration: type_specifier ID @2 AP . params FP compound_stmt

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 19

    type_specifier  go to state 20
    params          go to state 21
    param_list      go to state 22
    param           go to state 23


State 18

    8 var_declaration: type_specifier ID @1 ACOL NUM . FCOL PV

    FCOL  shift, and go to state 24


State 19

   10 type_specifier: VOID .
   15 params: VOID .

    FP        reduce using rule 15 (params)
    $default  reduce using rule 10 (type_specifier)


State 20

   18 param: type_specifier . ID
   20      | type_specifier . ID @3 ACOL FCOL

    ID  shift, and go to state 25


State 21

   13 fun_declaration: type_specifier ID @2 AP params . FP compound_stmt

    FP  shift, and go to state 26


State 22

   14 params: param_list .
   16 param_list: param_list . VIRG param

    VIRG  shift, and go to state 27

    $default  reduce using rule 14 (params)


State 23

   17 param_list: param .

    $default  reduce using rule 17 (param_list)


State 24

    8 var_declaration: type_specifier ID @1 ACOL NUM FCOL . PV

    PV  shift, and go to state 28


State 25

   18 param: type_specifier ID .
   20      | type_specifier ID . @3 ACOL FCOL

    ACOL      reduce using rule 19 (@3)
    $default  reduce using rule 18 (param)

    @3  go to state 29


State 26

   13 fun_declaration: type_specifier ID @2 AP params FP . compound_stmt

    ACH  shift, and go to state 30

    compound_stmt  go to state 31


State 27

   16 param_list: param_list VIRG . param

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 20
    param           go to state 32


State 28

    8 var_declaration: type_specifier ID @1 ACOL NUM FCOL PV .

    $default  reduce using rule 8 (var_declaration)


State 29

   20 param: type_specifier ID @3 . ACOL FCOL

    ACOL  shift, and go to state 33


State 30

   21 compound_stmt: ACH . local_declarations stmt_list FCH

    $default  reduce using rule 23 (local_declarations)

    local_declarations  go to state 34


State 31

   13 fun_declaration: type_specifier ID @2 AP params FP compound_stmt .

    $default  reduce using rule 13 (fun_declaration)


State 32

   16 param_list: param_list VIRG param .

    $default  reduce using rule 16 (param_list)


State 33

   20 param: type_specifier ID @3 ACOL . FCOL

    FCOL  shift, and go to state 35


State 34

   21 compound_stmt: ACH local_declarations . stmt_list FCH
   22 local_declarations: local_declarations . var_declaration

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 25 (stmt_list)

    var_declaration  go to state 36
    type_specifier   go to state 37
    stmt_list        go to state 38


State 35

   20 param: type_specifier ID @3 ACOL FCOL .

    $default  reduce using rule 20 (param)


State 36

   22 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 22 (local_declarations)


State 37

    6 var_declaration: type_specifier . ID PV
    8                | type_specifier . ID @1 ACOL NUM FCOL PV

    ID  shift, and go to state 39


State 38

   21 compound_stmt: ACH local_declarations stmt_list . FCH
   24 stmt_list: stmt_list . stmt

    error      shift, and go to state 40
    IF         shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    PV         shift, and go to state 47
    AP         shift, and go to state 48
    ACH        shift, and go to state 30
    FCH        shift, and go to state 49

    compound_stmt   go to state 50
    stmt            go to state 51
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    return_stmt     go to state 55
    expr            go to state 56
    var             go to state 57
    simple_expr     go to state 58
    additive_expr   go to state 59
    term            go to state 60
    factor          go to state 61
    call            go to state 62


State 39

    6 var_declaration: type_specifier ID . PV
    8                | type_specifier ID . @1 ACOL NUM FCOL PV

    PV  shift, and go to state 13

    $default  reduce using rule 7 (@1)

    @1  go to state 14


State 40

   54 additive_expr: error .

    $default  reduce using rule 54 (additive_expr)


State 41

   33 selection_stmt: IF . AP expr FP stmt
   34               | IF . AP expr FP stmt ELSE stmt

    AP  shift, and go to state 63


State 42

   36 return_stmt: RETURN . PV
   37            | RETURN . expr PV

    error      shift, and go to state 40
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    PV         shift, and go to state 64
    AP         shift, and go to state 48

    expr           go to state 65
    var            go to state 57
    simple_expr    go to state 58
    additive_expr  go to state 59
    term           go to state 60
    factor         go to state 61
    call           go to state 62


State 43

   35 iteration_stmt: WHILE . AP expr FP stmt

    AP  shift, and go to state 66


State 44

   40 var: ID .
   42    | ID . @4 ACOL expr FCOL
   67 call: ID . @5 AP args FP

    AP        reduce using rule 66 (@5)
    ACOL      reduce using rule 41 (@4)
    $default  reduce using rule 40 (var)

    @4  go to state 67
    @5  go to state 68


State 45

   64 factor: NUM .

    $default  reduce using rule 64 (factor)


State 46

   65 factor: NUM_FLOAT .

    $default  reduce using rule 65 (factor)


State 47

   32 expr_stmt: PV .

    $default  reduce using rule 32 (expr_stmt)


State 48

   61 factor: AP . expr FP

    error      shift, and go to state 40
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    expr           go to state 69
    var            go to state 57
    simple_expr    go to state 58
    additive_expr  go to state 59
    term           go to state 60
    factor         go to state 61
    call           go to state 62


State 49

   21 compound_stmt: ACH local_declarations stmt_list FCH .

    $default  reduce using rule 21 (compound_stmt)


State 50

   27 stmt: compound_stmt .

    $default  reduce using rule 27 (stmt)


State 51

   24 stmt_list: stmt_list stmt .

    $default  reduce using rule 24 (stmt_list)


State 52

   26 stmt: expr_stmt .

    $default  reduce using rule 26 (stmt)


State 53

   28 stmt: selection_stmt .

    $default  reduce using rule 28 (stmt)


State 54

   29 stmt: iteration_stmt .

    $default  reduce using rule 29 (stmt)


State 55

   30 stmt: return_stmt .

    $default  reduce using rule 30 (stmt)


State 56

   31 expr_stmt: expr . PV

    PV  shift, and go to state 70


State 57

   38 expr: var . ATRIB expr
   62 factor: var .

    ATRIB  shift, and go to state 71

    $default  reduce using rule 62 (factor)


State 58

   39 expr: simple_expr .

    $default  reduce using rule 39 (expr)


State 59

   43 simple_expr: additive_expr . relop additive_expr
   44            | additive_expr .
   45            | additive_expr . error
   52 additive_expr: additive_expr . addop term

    error    shift, and go to state 72
    SOMA     shift, and go to state 73
    SUB      shift, and go to state 74
    MENOR    shift, and go to state 75
    MENORIG  shift, and go to state 76
    MAIOR    shift, and go to state 77
    MAIORIG  shift, and go to state 78
    IG       shift, and go to state 79
    DIF      shift, and go to state 80

    PV    reduce using rule 44 (simple_expr)
    VIRG  reduce using rule 44 (simple_expr)
    FP    reduce using rule 44 (simple_expr)
    FCOL  reduce using rule 44 (simple_expr)

    relop  go to state 81
    addop  go to state 82


State 60

   53 additive_expr: term .
   57 term: term . mulop factor

    MUL  shift, and go to state 83
    DIV  shift, and go to state 84

    $default  reduce using rule 53 (additive_expr)

    mulop  go to state 85


State 61

   58 term: factor .

    $default  reduce using rule 58 (term)


State 62

   63 factor: call .

    $default  reduce using rule 63 (factor)


State 63

   33 selection_stmt: IF AP . expr FP stmt
   34               | IF AP . expr FP stmt ELSE stmt

    error      shift, and go to state 40
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    expr           go to state 86
    var            go to state 57
    simple_expr    go to state 58
    additive_expr  go to state 59
    term           go to state 60
    factor         go to state 61
    call           go to state 62


State 64

   36 return_stmt: RETURN PV .

    $default  reduce using rule 36 (return_stmt)


State 65

   37 return_stmt: RETURN expr . PV

    PV  shift, and go to state 87


State 66

   35 iteration_stmt: WHILE AP . expr FP stmt

    error      shift, and go to state 40
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    expr           go to state 88
    var            go to state 57
    simple_expr    go to state 58
    additive_expr  go to state 59
    term           go to state 60
    factor         go to state 61
    call           go to state 62


State 67

   42 var: ID @4 . ACOL expr FCOL

    ACOL  shift, and go to state 89


State 68

   67 call: ID @5 . AP args FP

    AP  shift, and go to state 90


State 69

   61 factor: AP expr . FP

    FP  shift, and go to state 91


State 70

   31 expr_stmt: expr PV .

    $default  reduce using rule 31 (expr_stmt)


State 71

   38 expr: var ATRIB . expr

    error      shift, and go to state 40
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    expr           go to state 92
    var            go to state 57
    simple_expr    go to state 58
    additive_expr  go to state 59
    term           go to state 60
    factor         go to state 61
    call           go to state 62


State 72

   45 simple_expr: additive_expr error .

    $default  reduce using rule 45 (simple_expr)


State 73

   55 addop: SOMA .

    $default  reduce using rule 55 (addop)


State 74

   56 addop: SUB .

    $default  reduce using rule 56 (addop)


State 75

   47 relop: MENOR .

    $default  reduce using rule 47 (relop)


State 76

   46 relop: MENORIG .

    $default  reduce using rule 46 (relop)


State 77

   48 relop: MAIOR .

    $default  reduce using rule 48 (relop)


State 78

   49 relop: MAIORIG .

    $default  reduce using rule 49 (relop)


State 79

   50 relop: IG .

    $default  reduce using rule 50 (relop)


State 80

   51 relop: DIF .

    $default  reduce using rule 51 (relop)


State 81

   43 simple_expr: additive_expr relop . additive_expr

    error      shift, and go to state 40
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    var            go to state 93
    additive_expr  go to state 94
    term           go to state 60
    factor         go to state 61
    call           go to state 62


State 82

   52 additive_expr: additive_expr addop . term

    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    var     go to state 93
    term    go to state 95
    factor  go to state 61
    call    go to state 62


State 83

   59 mulop: MUL .

    $default  reduce using rule 59 (mulop)


State 84

   60 mulop: DIV .

    $default  reduce using rule 60 (mulop)


State 85

   57 term: term mulop . factor

    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    var     go to state 93
    factor  go to state 96
    call    go to state 62


State 86

   33 selection_stmt: IF AP expr . FP stmt
   34               | IF AP expr . FP stmt ELSE stmt

    FP  shift, and go to state 97


State 87

   37 return_stmt: RETURN expr PV .

    $default  reduce using rule 37 (return_stmt)


State 88

   35 iteration_stmt: WHILE AP expr . FP stmt

    FP  shift, and go to state 98


State 89

   42 var: ID @4 ACOL . expr FCOL

    error      shift, and go to state 40
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    expr           go to state 99
    var            go to state 57
    simple_expr    go to state 58
    additive_expr  go to state 59
    term           go to state 60
    factor         go to state 61
    call           go to state 62


State 90

   67 call: ID @5 AP . args FP

    error      shift, and go to state 40
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    FP  reduce using rule 69 (args)

    expr           go to state 100
    var            go to state 57
    simple_expr    go to state 58
    additive_expr  go to state 59
    term           go to state 60
    factor         go to state 61
    call           go to state 62
    args           go to state 101
    arg_list       go to state 102


State 91

   61 factor: AP expr FP .

    $default  reduce using rule 61 (factor)


State 92

   38 expr: var ATRIB expr .

    $default  reduce using rule 38 (expr)


State 93

   62 factor: var .

    $default  reduce using rule 62 (factor)


State 94

   43 simple_expr: additive_expr relop additive_expr .
   52 additive_expr: additive_expr . addop term

    SOMA  shift, and go to state 73
    SUB   shift, and go to state 74

    $default  reduce using rule 43 (simple_expr)

    addop  go to state 82


State 95

   52 additive_expr: additive_expr addop term .
   57 term: term . mulop factor

    MUL  shift, and go to state 83
    DIV  shift, and go to state 84

    $default  reduce using rule 52 (additive_expr)

    mulop  go to state 85


State 96

   57 term: term mulop factor .

    $default  reduce using rule 57 (term)


State 97

   33 selection_stmt: IF AP expr FP . stmt
   34               | IF AP expr FP . stmt ELSE stmt

    error      shift, and go to state 40
    IF         shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    PV         shift, and go to state 47
    AP         shift, and go to state 48
    ACH        shift, and go to state 30

    compound_stmt   go to state 50
    stmt            go to state 103
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    return_stmt     go to state 55
    expr            go to state 56
    var             go to state 57
    simple_expr     go to state 58
    additive_expr   go to state 59
    term            go to state 60
    factor          go to state 61
    call            go to state 62


State 98

   35 iteration_stmt: WHILE AP expr FP . stmt

    error      shift, and go to state 40
    IF         shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    PV         shift, and go to state 47
    AP         shift, and go to state 48
    ACH        shift, and go to state 30

    compound_stmt   go to state 50
    stmt            go to state 104
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    return_stmt     go to state 55
    expr            go to state 56
    var             go to state 57
    simple_expr     go to state 58
    additive_expr   go to state 59
    term            go to state 60
    factor          go to state 61
    call            go to state 62


State 99

   42 var: ID @4 ACOL expr . FCOL

    FCOL  shift, and go to state 105


State 100

   71 arg_list: expr .

    $default  reduce using rule 71 (arg_list)


State 101

   67 call: ID @5 AP args . FP

    FP  shift, and go to state 106


State 102

   68 args: arg_list .
   70 arg_list: arg_list . VIRG expr

    VIRG  shift, and go to state 107

    $default  reduce using rule 68 (args)


State 103

   33 selection_stmt: IF AP expr FP stmt .
   34               | IF AP expr FP stmt . ELSE stmt

    ELSE  shift, and go to state 108

    ELSE      [reduce using rule 33 (selection_stmt)]
    $default  reduce using rule 33 (selection_stmt)


State 104

   35 iteration_stmt: WHILE AP expr FP stmt .

    $default  reduce using rule 35 (iteration_stmt)


State 105

   42 var: ID @4 ACOL expr FCOL .

    $default  reduce using rule 42 (var)


State 106

   67 call: ID @5 AP args FP .

    $default  reduce using rule 67 (call)


State 107

   70 arg_list: arg_list VIRG . expr

    error      shift, and go to state 40
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    AP         shift, and go to state 48

    expr           go to state 109
    var            go to state 57
    simple_expr    go to state 58
    additive_expr  go to state 59
    term           go to state 60
    factor         go to state 61
    call           go to state 62


State 108

   34 selection_stmt: IF AP expr FP stmt ELSE . stmt

    error      shift, and go to state 40
    IF         shift, and go to state 41
    RETURN     shift, and go to state 42
    WHILE      shift, and go to state 43
    ID         shift, and go to state 44
    NUM        shift, and go to state 45
    NUM_FLOAT  shift, and go to state 46
    PV         shift, and go to state 47
    AP         shift, and go to state 48
    ACH        shift, and go to state 30

    compound_stmt   go to state 50
    stmt            go to state 110
    expr_stmt       go to state 52
    selection_stmt  go to state 53
    iteration_stmt  go to state 54
    return_stmt     go to state 55
    expr            go to state 56
    var             go to state 57
    simple_expr     go to state 58
    additive_expr   go to state 59
    term            go to state 60
    factor          go to state 61
    call            go to state 62


State 109

   70 arg_list: arg_list VIRG expr .

    $default  reduce using rule 70 (arg_list)


State 110

   34 selection_stmt: IF AP expr FP stmt ELSE stmt .

    $default  reduce using rule 34 (selection_stmt)
